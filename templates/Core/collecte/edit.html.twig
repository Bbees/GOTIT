{% extends 'edit.html.twig' %}


{# EDIT : SAMPLING #}

{# Typehead : initialisation of typeahead EntityRelationalId field #}

{% set codeStation = '' %}
{% set idStation = '' %}
{% set route = app.request.attributes.get('_route') %}
{% set action = route|split('_')[1] %}
	{% if (collecte.stationFk.codeStation is defined )%}
	{#  case of an existing record #}
	{% set codeStation = collecte.stationFk.codeStation %}
	{% set idStation = collecte.stationFk.id %}
{% elseif app.request.query.get('idFk') is defined  and action == 'new'  %}
	{#  case of a new record with  a preselected relational entity #}
	{% set idStation = app.request.query.get('idFk') %}
	{% if app.request.query.get('idFk') is not empty %}
		{% set codeStation = collecte.stationFk.codeStation %}
	{% endif %}
{% endif %}

{% block stylesheets %}
	{{ parent() }}
	{{ encore_entry_link_tags("sampling-form") }}
{% endblock %}

{% block body %}
	{{ parent() }}
{% endblock %}


{% block scripts %}
{{ parent() }}

{{ encore_entry_script_tags("sampling-form") }}

{% if exception_message is defined %}
    <script type="text/javascript">
        alert( "{{ exception_message|raw }}" );
    </script>
{% endif %}

<script type="text/javascript">
    // Form actions
    $(document).ready(function () { // features of date & date_precision fields
        // var message = {"INCONNU":"{{ 'alert.datePrecisionINCONNU'|trans }}", "ANNEE":"{{ 'alert.datePrecisionANNEE'|trans }}", "MOIS":"{{ 'alert.datePrecisionMOIS'|trans }}", "JOUR":"{{ 'alert.datePrecisionJOUR'|trans }}", "BAD-FORMAT-DATE":"{{ 'alert.BadFormatDate'|trans }}"};
        // $('#bbees_e3sbundle_collecte_dateCollecte').change(function (e) {
        //     dateFormat('bbees_e3sbundle_collecte', 'dateCollecte', message);
        // });
        // $('[for^=bbees_e3sbundle_collecte_datePrecisionVocFk]').click(function (e) {
        //     if (dateDateprecision('bbees_e3sbundle_collecte', 'dateCollecte', message)) {
        //         setCodeCollecte();
        //     }
        // })
        // General action on form: form lock (default) / user role: app.user ...
        {% if action == 'show' %}
            // Adding a Back to Button to Specimen
            addBackToRelatedRecord('collecte', 'station', "{{ 'button.Back to station'|trans }}", 1, 'show');
        {% elseif action == 'edit' %}
            // adding a Back to button to Site
            addBackToRelatedRecord('collecte', 'station', "{{ 'button.Back to station'|trans }}", 1);
            {% if not is_granted('ROLE_ADMIN') %}
                // Locking fields: Station; Code collecte; Date collecte
                $('#bbees_e3sbundle_collecte_stationTypeahead').attr("disabled", true);
                $(document).on('submit', 'form[name="bbees_e3sbundle_collecte"]', function (ev) {
                    $('#bbees_e3sbundle_collecte_stationTypeahead').attr("disabled", false);
                });
                $('#bbees_e3sbundle_collecte_codeCollecte').attr("disabled", true);
                $(document).on('submit', 'form[name="bbees_e3sbundle_collecte"]', function (ev) {
                    $('#bbees_e3sbundle_collecte_codeCollecte').attr("disabled", false);
                });
                $('input[id^="bbees_e3sbundle_collecte_dateCollecte"]').attr("disabled", true);
                $(document).on('submit', 'form[name="bbees_e3sbundle_collecte"]', function (ev) {
                    $('input[id^="bbees_e3sbundle_collecte_dateCollecte"]').attr("disabled", false);
                });
        {% endif %}
    {% endif %}
    
    {% if action == 'new' %}
            // Action in CREATE mode
            // $('#bbees_e3sbundle_collecte_codeCollecte').attr("disabled", true);
            // $(document).on('submit', 'form[name="bbees_e3sbundle_collecte"]', function (ev) { // Unlocking fields to allow registration
            //     $('#bbees_e3sbundle_collecte_codeCollecte').attr("disabled", false);
            // });
            // case where a station is yet selected : Locked field: stationTypeahead
            {% if app.request.query.get('idFk') is defined and app.request.query.get('idFk') is not empty %}
                $('#bbees_e3sbundle_collecte_stationTypeahead').attr("disabled", true).css("background-color", "WhiteSmoke");{% endif %}
            // specific features: automatically generate codeCollection
            setCodeCollecte({"INCONNU": "{{ 'INCONNU'|trans }}", "ANNEE": "{{ 'ANNEE'|trans }}", "MOIS": "{{ 'MOIS'|trans }}", "JOUR": "{{ 'JOUR'|trans }}", "NOT KNOWN": "{{ 'NOT KNOWN'|trans }}", "YEAR": "{{ 'YEAR'|trans }}", "MONTH": "{{ 'MONTH'|trans }}", "DAY": "{{ 'DAY'|trans }}"});
            $('#bbees_e3sbundle_collecte_stationFk').change(function (e) {
                setCodeCollecte({"INCONNU": "{{ 'INCONNU'|trans }}", "ANNEE": "{{ 'ANNEE'|trans }}", "MOIS": "{{ 'MOIS'|trans }}", "JOUR": "{{ 'JOUR'|trans }}", "NOT KNOWN": "{{ 'NOT KNOWN'|trans }}", "YEAR": "{{ 'YEAR'|trans }}", "MONTH": "{{ 'MONTH'|trans }}", "DAY": "{{ 'DAY'|trans }}"});
            })
        {% endif %}
    });
</script>
<script>
    // // Typeahead Constructing the suggestion engine
    var stations = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace, 
        queryTokenizer: Bloodhound.tokenizers.whitespace, 
        remote: {url: '{{ path("station_search", { 'q':"QUERY"}) |replace({"QUERY": "%QUERY"}) }}', 
        wildcard: '%QUERY'}});
    // Initializing the typeahead fields
    var selectedTypeahead = 0; /* flag to know if there is a Typeahead selected value  */
    $('input.typeahead').val("{{ codeStation }}");
    $('#bbees_e3sbundle_collecte_stationId').val({{ idStation }});
    $('.typeahead-station')
        .typeahead({hint: true, highlight: false, /* Enable substring highlighting */
            minLength: 1 /* Specify minimum characters required for showing result */
        }, {name: 'stations', source: stations, displayKey: "code", limit: 40})
        .on('keyup', this, function (event) {
            selectedTypeahead = 0;
        })
        .bind('typeahead:select', function (ev, item) {
            var $this = $(this);
            var codeTypeaheadSelect = item.code;
            var idTypeaheadSelect = item.id;
            // alert(codeTypeaheadSelect);
            $('#' + $this.attr('data-target_id')).val(item.id);
            $station = $this.parents('.form-group').find('input.bbees_e3sbundle_collecte[stationId]');
            if ($station.length === 1) {
                $station.val(item.id);
            }
            selectedTypeahead = 1;
            // set auto-generated code if needed
            setCodeCollecte({"INCONNU": "{{ 'INCONNU'|trans }}", "ANNEE": "{{ 'ANNEE'|trans }}", "MOIS": "{{ 'MOIS'|trans }}", "JOUR": "{{ 'JOUR'|trans }}", "NOT KNOWN": "{{ 'NOT KNOWN'|trans }}", "YEAR": "{{ 'YEAR'|trans }}", "MONTH": "{{ 'MONTH'|trans }}", "DAY": "{{ 'DAY'|trans }}"});
        })
        .bind('typeahead:close', function (ev, item) {
            if (selectedTypeahead == 0) { /* if there is no Typeahead selected value fields are reinitialized */
                $('input.typeahead').val("{{ codeStation }}");
                $('#bbees_e3sbundle_collecte_stationId').val({{ idStation }});
                setCodeCollecte({"INCONNU": "{{ 'INCONNU'|trans }}", "ANNEE": "{{ 'ANNEE'|trans }}", "MOIS": "{{ 'MOIS'|trans }}", "JOUR": "{{ 'JOUR'|trans }}", "NOT KNOWN": "{{ 'NOT KNOWN'|trans }}", "YEAR": "{{ 'YEAR'|trans }}", "MONTH": "{{ 'MONTH'|trans }}", "DAY": "{{ 'DAY'|trans }}"});
            }
            var $this = $(this);
            if ($.trim($this.val()) === '') {
                $this.val('');
                $station = $this.parents('.form-group').find('input.bbees_e3sbundle_collecte[stationId]');
                if ($station.length === 1) {
                    $station.val('');
                }
            }
        });
</script>


{% endblock %}
